class Button implements ButtonInterface{
  
  int xPosition;
  int yPosition;
  int buttonWidth;
  int buttonHeight;
  String buttonText;
  boolean buttonIsClicked;
  color buttonColour;
  boolean buttonPressed;
  boolean buttonIsEnabled;
  boolean buttonIsVisible;
  
  // values provided are stored above
  Button() {  
    
    xPosition = 0;
    yPosition = 0;
    buttonWidth = 0;
    buttonHeight = 0;
    buttonText = "";
    buttonPressed = false;
    buttonIsClicked = false;
    buttonColour = color(255,255,255,255);
    buttonIsEnabled = false;
    buttonIsVisible = false;
  }
  
  
  void setBounds(int newX, int newY, int newWidth, int newHeight) {
    xPosition = newX;
    yPosition = newY;
    buttonWidth = newWidth;
    buttonHeight = newHeight;    
  }
  
  void setText(String buttonText2) {
    buttonText = buttonText2;
  }
  
  void setColour(int red, int green, int blue, int transparity) {
    buttonColour = color(red,green,blue,transparity);
  }
  
  
  // If mouse is over button, marks that the button has been clicked
  boolean buttonClicked(int xCoord, int yCoord) {
    if (xCoord > xPosition && xCoord < xPosition + buttonWidth && yCoord > yPosition && yCoord < yPosition + buttonHeight && buttonIsEnabled == true) {
      buttonIsClicked = true;      
    }
    return buttonIsClicked;
  }
  
  
  
  // returns true if button has been clicked otherwise returns false
  boolean isButtonClicked() {
    return buttonIsClicked;
  }
  
  
  // Method to draw button
  void paint() {
    if ( buttonIsVisible == true) {
      buttonIsPressed(mouseX, mouseY);
      if (buttonIsPressed(mouseX, mouseY) == true) {
        strokeWeight(5);
      } else {
        strokeWeight(1);
      }
      rectMode(CORNER);
      stroke(0);
      fill(buttonColour);
      rect(xPosition, yPosition, buttonWidth, buttonHeight);
      textAlign(CENTER);
      fill(0);
      int textXPosition = xPosition + (buttonWidth/2);
      int textYPosition = (yPosition + (buttonHeight/2))+5;
      text(buttonText,textXPosition,textYPosition);
    }    
  }
  
  
  // Resets clicked. if not used acts like button is held down (toggle?).
  void unClick() {
    buttonIsClicked = false;
  }
  
  
  boolean buttonIsPressed(int xCoord, int yCoord) {
    boolean i = false;
    if (mousePressed == true) {
      if (xCoord > xPosition && xCoord < xPosition + buttonWidth && yCoord > yPosition && yCoord < yPosition + buttonHeight && buttonIsEnabled == true) {
        i = true;
      }
    } else {
      i = false;
    }
    
    if (buttonIsEnabled == true) {
      return i;
    } else {
      return false;
    }
  }
  
  void setSize (int newWidth, int newHeight) {
    buttonWidth = newWidth;
    buttonHeight = newHeight; 
  }
    
  void setEnabled (boolean isEnabled) {
    buttonIsEnabled = isEnabled;      
  }
  
  void setVisible2 (boolean isVisible) {
    buttonIsVisible = isVisible;
  }
  
  boolean isVisible2() {
    return buttonIsVisible;
  }
  
  String getText() {
    return buttonText;
  }
  
  boolean getEnabled() {
    return buttonIsEnabled;
  }
  
}
